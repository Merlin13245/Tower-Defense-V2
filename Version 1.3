//Collections is used to manipulate data in order to make targeting easier
import java.util.Collections;
//"List" is similar to ArrayList, its a dynamic data structure

//Stage keeps track of what level the player is on, if 0 then main menu. This is also used for all kinds of other operations
int stage = 1;

//This list is for storing the massive number of Target objects I will be creating.
ArrayList<Target> TargetList = new ArrayList<Target>();
//This list is for storing the massive number of PlasmaShot objects I will be creating.
ArrayList<Target> PlasmaShotList = new ArrayList<Target>();

//PImages are the backgrounds for each screen (main, stages, etc)
PImage Stage1;

//Creating objects
PlasmaTower PlasmaTower1;
Target Target1;
PlasmaShot PlasmaShot1;

void setup(){
  //This size is perfect for a full screen window on my laptop
  size(1350,700);
  
  //Setting the draw modes for easy shap drawing
  rectMode(CENTER);
  ellipseMode(CENTER);
  
  //Loading the background images, the file must be in the workspace of the project to properly load
  Stage1 = loadImage("Stage1.png");
  
  //Creating objects
  PlasmaTower1 = new PlasmaTower();
  Target1 = new Target();
  PlasmaShot1 = new PlasmaShot();
  
  //New PVector declarations
  PlasmaShot1.getPVector();
  Target1.getPVector();
  
  //Itilization of several object variables in order to avoid nullpointerexceptions
  Target1.setTarget(3);
  PlasmaShot1.setTarget(0,0);

  
}

void draw(){

  //Setting the background based on what level the player is on.
  if(stage == 1){
    image(Stage1,0,0);
  }
  
  //I have these functions here for temparary testing
  PlasmaTower1.drawTower();
  PlasmaShot1.setTarget(Target1.getVector().x, Target1.getVector().y);
  PlasmaShot1.shoot();
  Target1.drawTarget(stage);
  
}

//Method looks for a mouse press and performs functions based on where the mouse is.
void mousePressed(){
  PlasmaTower1.setLocation();
}
